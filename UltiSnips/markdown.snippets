priority 10

snippet mk "Math" wA
$${1}$$2
endsnippet

snippet dm "Math" wA
$$
$1
$$
$2
endsnippet


snippet temp "temp snip" w 
It is a value of temp snippet
endsnippet

snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet sr "squared" iA
^2
endsnippet

snippet cb "cubed" iA
^3
endsnippet


snippet rd "upper case" iA
^{$1}$0
endsnippet

priority 0

snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet



snippet / "Fraction" iA
\\frac{${VISUAL}}{$1}$0
endsnippet

priority 20

snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet


priority 1000

snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

priority 10
snippet '(\w+)\.par' "word to parethnesses" wr
(`!p snip.rv = match[1]`$1)$0
endsnippet


snippet "bar" "line over arg" riA
\overline{$1}$0
endsnippet


snippet "hat" "hat over arg" riA
\hat{$1}$0
endsnippet

priority 100

snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet


snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet


snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet
